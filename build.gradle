buildscript {
    ext {
        kotlin_version = '1.0.6'
        retrofit_version = '2.1.0'
        okhttp_version = '3.3.1'
        spring_version = '1.5.0.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath("org.jetbrains.kotlin:kotlin-allopen:$kotlin_version")
        classpath("org.springframework.boot:spring-boot-gradle-plugin:$spring_version")
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'spring-boot'

jar {
    baseName = 'reactive-weather-api'
    version = '0.1.0'
    archiveName = baseName + '.jar'
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile("org.springframework.boot:spring-boot-starter-web")

    compile 'com.google.code.gson:gson:2.8.0'

    testCompile 'junit:junit:4.12'

    // Networking
    compile "com.squareup.retrofit2:retrofit:$retrofit_version"
    compile "com.squareup.retrofit2:converter-gson:$retrofit_version"
    compile "com.squareup.okhttp3:okhttp:$okhttp_version"
    compile "com.squareup.okhttp3:logging-interceptor:$okhttp_version"

    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile 'com.jayway.awaitility:awaitility:1.7.0'

}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}

task stage {
    dependsOn build
}

check.dependsOn.remove(test)